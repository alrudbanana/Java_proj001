	package chapter06;
	
	
	
	//클래스 외부 : 패키지,임포트,외부클래스 
	public class Object01	 {
	
		//클래스 내부에 올 수 있는 4가지 
		
		
		
		public static void main(String[] args) {
			// 절차 지향 프로그램 : C
			/*
			 * 절차 지향 프로그램 : C , 람보르기니
	
	1. 장점 :
	    1. 성능이 우수하다 
	    2. OS(Window/Linux/Unix) : C,C++
	2. 단점 :
	    1. 프로그래밍 하기가 어렵다.
	    2. 유지 보수가 어렵다.
	    3. 문제가 생기면 전체 코드를 수정 
	
	객체지향 프로그램 : Java,  C++,  현대자동차.
	
	1. 장점 : 
	    1. 모든 것들을 객체화 해서 프로그래밍 함
	    2. 코드가 간결해짐
	    3. 문제가 생겼을때 유지보수 하기가 쉽다.
	    4. 문제가 생긴 객체만 수정 
	    5. 완성된 프로그램은 각각의 객체를 조합해서 완성.
	2. 단점 :
	    1. 성능이 절차지향 
	    2. 프로그램에 비해서 느릴수있다.
	
	클래스 ( Class) : 객체를 생성하기 위한 틀, 붕어빵 기계
	
	객체 (Object) = 인스턴스 (Instance) : class를 기준으로 생성된 메모리에서 실행되는 프로그램 
	
	→ 붕어빵
	
	
	
	### 클래스 외부에 올 수 있는 3가지
	
	1. 패키지 : 클래스를 조직화하는 폴더
	2. import : 동일한 패키지에 존재하지 않는 클래스 
	3. 외부클래스 
	
	### 클래스 내부에 올 수 있는 4가지
	
	1. 필드 (멤버변수) : 클래스 블락에 선언된 변수를 필드라 호칭
	2. 매소드 내에서 선언한 변수를 지역변수 
	3. 메소드 (멤버 메소드)  : 함수를 객체 지향언어에서는 메소드라 호칭함
	    1. void main() { }
	4. 생성자 : 객체를 생성할때 필드의 값을 초기화 시켜주는 작업
	    1. - 객체의 이름과 동일한 이름의 메소드 
	    2. 리턴타입이 있으면 안됨.
	5. 내부 클래스  : 클래스 내부의 클래스 (Inner Class)
			 */
	
			
			
			
		}
	
	}
